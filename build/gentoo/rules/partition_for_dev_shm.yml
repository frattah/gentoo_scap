description: 'The <tt>/dev/shm</tt> is a traditional shared memory concept.

    One program will create a memory portion, which other processes

    (if permitted) can access. If <tt>/dev/shm</tt> is not configured,

    tmpfs will be mounted to /dev/shm by systemd.'
rationale: 'Any user can upload and execute files inside the <tt>/dev/shm</tt> similar
    to

    the <tt>/tmp</tt> partition. Configuring <tt>/dev/shm</tt> allows an administrator

    to set the noexec option on the mount, making /dev/shm useless for an attacker
    to

    install executable code. It would also prevent an attacker from establishing a

    hardlink to a system setuid program and wait for it to be updated. Once the program

    was updated, the hardlink would be broken and the attacker would have his own
    copy

    of the program. If the program happened to have a security vulnerability, the
    attacker

    could continue to exploit the known flaw.'
severity: low
references: {}
components:
- filesystem
identifiers: {}
ocil_clause: '"/dev/shm is not a mountpoint" is returned'
ocil: 'Verify that a separate file system/partition has been created for <code>/dev/shm</code>
    with the following command:


    <pre>$ mountpoint /dev/shm</pre>

    '
oval_external_content: null
fixtext: Migrate the "/dev/shm" path onto a separate file system.
checktext: ''
vuldiscussion: ''
srg_requirement: ''
warnings:
-   general: 'This rule does not have a remedation.

        It is expected that this will be managed by systemd and will be a tmpfs partition.'
conflicts: []
requires: []
policy_specific_content: {}
platform: machine
platforms: !!set
    machine: null
sce_metadata: {}
inherited_platforms: !!set {}
cpe_platform_names: !!set
    machine: null
inherited_cpe_platform_names: !!set {}
bash_conditional: null
fixes: {}
title: Ensure /dev/shm is configured
definition_location: /home/fra/gentoo_scap/linux_os/guide/system/software/disk_partitioning/partition_for_dev_shm/rule.yml
template:
    name: mount
    vars:
        mountpoint: /dev/shm
    backends:
        blueprint: 'off'
        anaconda: 'off'
documentation_complete: true
