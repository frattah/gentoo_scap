<def-group><definition class="compliance" id="service_nftables_disabled" version="1">
    <metadata>
        <title>Verify nftables Service is Disabled</title>
            <affected family="unix">
                <platform>multi_platform_all</platform>
            </affected>
        <description>The nftables service should be disabled.</description>
    </metadata>
    <criteria comment="package nftables removed or service nftables is not configured to start" operator="OR">
      <criterion comment="nftables removed" test_ref="service_nftables_disabled_test_service_nftables_package_nftables_removed" />
      
  
      <criteria operator="AND" comment="service nftables is not configured to start">
        <criterion test_ref="test_service_not_running_service_nftables_disabled_nftables"
          comment="nftables is not running"/>
        <criterion test_ref="test_service_loadstate_is_masked_service_nftables_disabled_nftables"
          comment="Property LoadState of service nftables is masked"/>
      </criteria>

    </criteria>
  </definition>
  
  
      <linux:systemdunitproperty_test id="test_service_not_running_service_nftables_disabled_nftables"
        check="all" check_existence="any_exist"
        comment="Test that the nftables service is not running" version="1">
        <linux:object object_ref="obj_service_not_running_service_nftables_disabled_nftables"/>
        <linux:state state_ref="state_service_not_running_service_nftables_disabled_nftables"/>
      </linux:systemdunitproperty_test>

    <linux:systemdunitproperty_object id="obj_service_not_running_service_nftables_disabled_nftables"
      comment="Retrieve the ActiveState property of nftables" version="1">
      <linux:unit operation="pattern match">^nftables\.(service|socket)$</linux:unit>
      <linux:property>ActiveState</linux:property>
    </linux:systemdunitproperty_object>

    <linux:systemdunitproperty_state id="state_service_not_running_service_nftables_disabled_nftables"
      version="1" comment="nftables is not running">
      <linux:value operation="pattern match">inactive|failed</linux:value>
    </linux:systemdunitproperty_state>

    <linux:systemdunitproperty_test check="all" check_existence="any_exist"
      id="test_service_loadstate_is_masked_service_nftables_disabled_nftables"
      comment="Test that the property LoadState from the service nftables is masked"
      version="1">
      <linux:object object_ref="obj_service_loadstate_is_masked_service_nftables_disabled_nftables"/>
      <linux:state state_ref="state_service_loadstate_is_masked_service_nftables_disabled_nftables"/>
    </linux:systemdunitproperty_test>

    <linux:systemdunitproperty_object  comment="Retrieve the LoadState property of nftables"
      version="1" id="obj_service_loadstate_is_masked_service_nftables_disabled_nftables">
      <linux:unit operation="pattern match">^nftables\.(service|socket)$</linux:unit>
      <linux:property>LoadState</linux:property>
    </linux:systemdunitproperty_object>

    <linux:systemdunitproperty_state comment="LoadState is set to masked"
      id="state_service_loadstate_is_masked_service_nftables_disabled_nftables"
      version="1">
      <linux:value>masked</linux:value>
    </linux:systemdunitproperty_state>

  
  <linux:rpminfo_test check="all" check_existence="none_exist"
  id="service_nftables_disabled_test_service_nftables_package_nftables_removed" version="1"
  comment="package nftables is removed">
    <linux:object object_ref="obj_service_nftables_disabled_test_service_nftables_package_nftables_removed" />
  </linux:rpminfo_test>
  <linux:rpminfo_object id="obj_service_nftables_disabled_test_service_nftables_package_nftables_removed" version="1">
    <linux:name>nftables</linux:name>
  </linux:rpminfo_object>


</def-group>